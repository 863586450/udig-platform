<!--
	This program and the accompanying materials are made available
	under the terms of the Eclipse Public License v1.0 which
	accompanies this distribution, and is available at
  	http://www.eclipse.org/legal/epl-v10.html

	This build script creates a build directory containing the plugins
	and features to be built, and then kicks off the PDE build process.
	You could just as easily do this from a shell script or cron job.

	Also, the script can be run inside the Eclipse IDE by choosing
	Run As -> Ant Build from the context menu. It could obviously be
	run outside of the IDE if you have ANT installed on your path.

	If you have any questions about this build, feel free to contact me
	at patrick@rcpquickstart.com.
-->
<project name="net.refractions.udig.build" default="build">
	<property file="build.properties" />


	<!--
		PDE Build expects that the build directory contains a "plugins"
		directory and a "features" directory. These directories should contain
		the various plug-ins and features to be built.


	-->
	<target name="init">
		<mkdir dir="${buildDirectory}" />
		<mkdir dir="${buildDirectory}/plugins" />
		<mkdir dir="${buildDirectory}/features" />
		<copy todir="${buildDirectory}/plugins">
			<fileset dir="../plugins/">
				<exclude name="**/.svn/" />
				<exclude name="**/bin/" />
				<exclude name="net.refractions.udig.libs/libs/" />
				<exclude name="net.refractions.udig.libs.source/**/*.zip" />
			</fileset>
			<fileset dir="../tutorials/">
				<exclude name="**/.svn" />
				<exclude name="**/bin/" />
			</fileset>
			<fileset dir="../fragments/">
				<exclude name="**/.svn" />
				<exclude name="**/bin/" />
			</fileset>
		</copy>
		<copy todir="${buildDirectory}/features">
			<fileset dir="../features">
				<exclude name="**/.svn/**" />
				<exclude name="**/bin/" />
			</fileset>
		</copy>

		<ant dir="${buildDirectory}/plugins/net.refractions.udig.libs/" antfile="copy.xml" target="clean"/>
	</target>

	<!--
		This target actually executes the PDE Build process by launching the
		Eclipse antRunner application.

		NOTE: If you are using Eclipse 3.2, switch out the pathelement below
		with the one that is commented out.
	-->
	<target name="pde-build">
		<property name="builderFile" value="${eclipseLocation}/plugins/org.eclipse.pde.build_${pdeBuildPluginVersion}/scripts/productBuild/productBuild.xml" />
		<property name="launcherPlugin" value="${eclipseLocation}/plugins/org.eclipse.equinox.launcher_${equinoxLauncherPluginVersion}.jar" />
		<echo message="${product}" />
		<echo message="${builderFile}" />
		<echo message="${launcherPlugin}" />
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-buildfile" />
			<arg value="${builderFile}" />
			<arg value="-Dtimestamp=${timestamp}" />
			<classpath>
				<pathelement location="${launcherPlugin}" />
				<!--<pathelement location="${eclipseLocation}/startup.jar" />-->
			</classpath>
		</java>
	</target>

	<target name="clean">
		<delete dir="${buildDirectory}" />
	</target>

	<target name="upload">
		<scp file="" todir=""></scp>
	</target>

	<target name="build" depends="clean, init, pde-build" />
</project>
