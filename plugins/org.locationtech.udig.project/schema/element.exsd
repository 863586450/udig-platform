<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.locationtech.udig.project">
<annotation>
      <appInfo>
         <meta.schema plugin="org.locationtech.udig.project" id="element" name="element"/>
      </appInfo>
      <documentation>
         This extension point is allows a simple way to add objects to a project.  In order to add a new type of object to a project you must either learn EMF and generate a new type of ProjectElement subclass or extend this extension point.  This extension point allows the extension mechanism to create a type of org.locationtech.udig.project.element.IGenericProjectElement which, when wrapped by a ProjectElementAdapterImpl (created using ElementFactory or ApplicationGIS if you have the org.locationtech.udig.ui.project plugin installed), can be added to a project and persisted between uDig runs.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="element" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="element">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="label" icon="icon"/>
         </appInfo>
         <documentation>
            An element that can be wrapped by the org.locationtech.udig.project.element.ProjectElementAdapter class and added to a project
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  A unique identifier for the type of element
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The implementation of the element type.  It is recommended that one extends the org.locationtech.udig.project.element.AbstractGenericProjectElement class as it provides most of the boiler plate code required.  It also adapts to the ProjectElement interface.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.locationtech.udig.project.element.IGenericProjectElement"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="label" type="string">
            <annotation>
               <documentation>
                  A label to display in viewers if the LabelProvider is not supplied
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  An icon to display in viewers if the LabelProvider is not supplied or if getImage returns null;
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="labelProvider" type="string">
            <annotation>
               <documentation>
                  Provides labelling for the element in JFace viewer.  If getImage returns null then icon will be used.  The labelProvider overrides options put in the label and icon attributes.  If the labelProvider implements IColorDecorator or IFontDecorator then the font and color will be used.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.jface.viewers.IBaseLabelProvider"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="fileExtension" type="string" use="required">
            <annotation>
               <documentation>
                  The extension for the element when it is saved to file.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
uDig - User Friendly Desktop Internet GIS client
<A HREF="http://udig.refractions.net">http://udig.refractions.net</A>
(C) 2004-2012, Refractions Research Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
(<A HREF="http://www.eclipse.org/legal/epl-v10.html">http://www.eclipse.org/legal/epl-v10.html</A>), and Refractions BSD
License v1.0 (<A HREF="http://www.eclipse.org/org/documents/edl-v10.html">http://www.eclipse.org/org/documents/edl-v10.html</A>).
      </documentation>
   </annotation>

</schema>
